name: Build and Release JAR from pom.xml

on:
  push:
    branches:
      - master
    paths:
      - 'pom.xml'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'maven'

      - name: Get version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tag_check
        run: |
          if git ls-remote --tags origin | grep "refs/tags/v$VERSION$"; then
            echo "Tag v$VERSION already exists, skipping release."
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "EXISTS=false" >> $GITHUB_ENV
        env:
          VERSION: ${{ steps.get_version.outputs.version }}

      - name: Cancel if version tag already exists
        if: env.EXISTS == 'true'
        run: exit 0

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Create GitHub tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag v$VERSION
          git push origin v$VERSION
        env:
          VERSION: ${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          files: |
            target/*.jar
            target/*.javadoc.jar
            source/lib/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
