name: maven-publish.yml
on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.version }}
      RELEASE_UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'maven'

      - name: Get version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Create GitHub tag (If it doesn't exist yet)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag v${{ steps.get_version.outputs.version }} || echo "Tag exists"
          git push origin v${{ steps.get_version.outputs.version }} || echo "Tag already pushed"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            ðŸ§© Maven and native binaries.
          name: Release v${{ steps.get_version.outputs.version }}
          tag_name: v${{ steps.get_version.outputs.version }}
          files: target/*.jar target/*.javadoc.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  compile-macos-libraries:
    runs-on: macos-latest
    needs: build-and-release
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install libpng
        run: brew install libpng

      - name: Build macOS dylib
        run: |
          VERSION=${{ needs.build-and-release.outputs.VERSION }}
          mkdir -p lib
          BREW_PREFIX=$(brew --prefix)
          clang++ -dynamiclib -std=c++17 -fPIC \
            -DOLC_PGE_APPLICATION -DOLC_PLATFORM_GLUT \
            -DVERSION="\"${VERSION}\"" \
            -I${BREW_PREFIX}/include \
            -L${BREW_PREFIX}/lib \
            native/org_kurodev_pixelGameEngineFFM.cpp \
            -lpng \
            -o lib/liborg_kurodev_pixelGameEngineFFM.dylib \
            -framework Cocoa -framework OpenGL

      - name: Upload macOS dylib to release
        run: |
          gh auth setup-git
          sleep 5  # allow release to propagate
          gh release upload v${{ needs.build-and-release.outputs.VERSION }} lib/*.dylib --clobber=false --repo $GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  compile-windows-linux-libraries:
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Build Linux & Windows libraries via Docker
        run: |
          mkdir -p lib
          docker build -o . .

      - name: Upload Linux & Windows libraries to release
        run: |
          gh auth setup-git
          sleep 5  # allow release to propagate
          gh release upload v${{ needs.build-and-release.outputs.VERSION }} lib/* --clobber=false --repo $GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
